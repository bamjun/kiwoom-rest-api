--- gitcommit message rules start
# gitcommit message rules
- **Feat**: Implement new feature  
- **Add**: Add asset files  
- **Fix**: Fix bugs  
- **Docs**: Add or update documentation  
- **Style**: Styling work (no code logic changes)  
- **Refactor**: Code refactoring (no functional changes)  
- **Test**: Add or modify tests  
- **Deploy**: Deployment-related changes  
- **Conf**: Build or environment configuration  
- **Chore**: Miscellaneous tasks  


> Write a Git commit message following this format:
>
> * The first line must start with a tag (e.g., `[feat]`, `[fix]`, `[refactor]`, `[test]`, `[docs]`, `[style]`, `[chore]`) and a short description, **under 30 characters**.
> * At the end of the first line, include the number of modified files and lines **based on the staged changes** in this format: `[file {number of staged files} - lines {number of staged lines}]`.
>
>   * Example:
>
>     * 1 staged file and 3 staged lines → `[file 1 - lines 3]`
>     * 1 staged file and 1 staged line → `[file 1 - lines 1]`
>     * 3 staged files and 10 staged lines → `[file 3 - lines 10]`
> * From the second line, add detailed descriptions.
> * Write up to **5 lines** of detailed descriptions, each starting with a hyphen `-`.


### 수정된 예제

```example1
[Feat] new feature [file 1 - lines 3]
- new feature description
- new feature description
- new feature description
```

```example2
[Fix] fix bug [file 1 - lines 3]
- fix bug description
- fix bug description
- fix bug description
```

```example3
[Refactor] refactor code [file 1 - lines 3]
- refactor code description
- refactor code description
- refactor code description
```

```example4
[Test] add test [file 1 - lines 3]
- add test description
- add test description
- add test description
```

```example5
[Docs] add docs [file 1 - lines 3]
- add docs description
- add docs description
- add docs description
```

```example6
[Style] style code [file 1 - lines 3]
- style code description
- style code description
- style code description
```

```example7
[Chore] chore [file 1 - lines 3]
- chore description
- chore description
- chore description
```
--- gitcommit message rules end